// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using EVRental.Repositories.QuanNH.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;

namespace EVRental.Repositories.QuanNH.DBContext;

public partial class FA25_PRN232_SE1717_G6_EVRentalContext : DbContext
{
    public FA25_PRN232_SE1717_G6_EVRentalContext()
    {
    }

    public FA25_PRN232_SE1717_G6_EVRentalContext(DbContextOptions<FA25_PRN232_SE1717_G6_EVRentalContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CheckOutQuanNh> CheckOutQuanNhs { get; set; }

    public virtual DbSet<ReturnCondition> ReturnConditions { get; set; }

    public virtual DbSet<SystemUserAccount> SystemUserAccounts { get; set; }

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection")).UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);

    //    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
    //        => optionsBuilder.UseSqlServer("Data Source=LENOVO-QUAN\\SQLQUAN;Initial Catalog=FA25_PRN232_SE1717_G6_EVRental;Persist Security Info=True;User ID=sa;Password=12345;Encrypt=False");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CheckOutQuanNh>(entity =>
        {
            entity.HasKey(e => e.CheckOutQuanNhid).HasName("PK__CheckOut__6FFA9448DA30B303");

            entity.ToTable("CheckOutQuanNH");

            entity.HasIndex(e => e.ReturnConditionId, "UQ__CheckOut__B463E3001B9982E2").IsUnique();

            entity.Property(e => e.CheckOutQuanNhid).HasColumnName("CheckOutQuanNHID");
            entity.Property(e => e.CheckOutTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CustomerFeedback)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CustomerSignature)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ExtraCost)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(10, 2)");
            entity.Property(e => e.IsDamageReported).HasDefaultValue(false);
            entity.Property(e => e.IsPaid).HasDefaultValue(false);
            entity.Property(e => e.LateFee)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Notes)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PaymentMethod)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ReturnConditionId).HasColumnName("ReturnConditionID");
            entity.Property(e => e.StaffSignature)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TotalCost)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.ReturnCondition).WithOne(p => p.CheckOutQuanNh)
                .HasForeignKey<CheckOutQuanNh>(d => d.ReturnConditionId)
                .HasConstraintName("FK__CheckOutQ__Retur__4222D4EF");
        });

        modelBuilder.Entity<ReturnCondition>(entity =>
        {
            entity.HasKey(e => e.ReturnConditionId).HasName("PK__ReturnCo__B463E301FCE21BA3");

            entity.ToTable("ReturnCondition");

            entity.Property(e => e.ReturnConditionId).HasColumnName("ReturnConditionID");
            entity.Property(e => e.IsResolved).HasDefaultValue(false);
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.RepairCost)
                .HasDefaultValue(0m)
                .HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<SystemUserAccount>(entity =>
        {
            entity.HasKey(e => e.UserAccountId).HasName("PK__System_U__DA6C70BAEB88F66D");

            entity.ToTable("System_UserAccount");

            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");
            entity.Property(e => e.ApplicationCode).HasMaxLength(50);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(150);
            entity.Property(e => e.EmployeeCode)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ModifiedBy).HasMaxLength(50);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.RequestCode).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}