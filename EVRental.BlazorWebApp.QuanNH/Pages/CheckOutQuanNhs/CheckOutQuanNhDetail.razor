@page "/CheckOutQuanNhs/Detail/{id:int}"
@using EVRental.BlazorWebApp.QuanNH.Models
@inject EVRental.BlazorWebApp.QuanNH.GraphQLClients.GraphQLConsumers _graphQLConsumers
@inject NavigationManager Navigation

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card-modern">
                <div class="card-header" style="background: linear-gradient(135deg, #63b3ed 0%, #4299e1 100%); color: white; border-radius: 20px 20px 0 0 !important; padding: 1.5rem;">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="mb-0">
                            <i class="bi bi-info-circle me-2"></i>
                            Check Out Details
                        </h3>
                        <div>
                        <button class="btn btn-modern" style="background: white; color: var(--warning-gradient-start);" @onclick="GoToEdit">
                            <i class="bi bi-pencil me-1"></i>Edit
                        </button>
                        <button class="btn btn-gradient-danger me-2" @onclick="GoToDelete">
                            <i class="bi bi-trash me-1"></i>Delete
                        </button>
                        <button class="btn btn-modern" style="background: white; color: #6c757d;" @onclick="GoBack">
                            <i class="bi bi-arrow-left me-1"></i>Back
                        </button>
                        </div>
                    </div>
                </div>

                <div class="card-body p-4">
                    @if (IsLoading)
                    {
                        <div class="text-center py-5">
                            <div class="spinner-border text-info" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-3 text-muted">Loading details...</p>
                        </div>
                    }
                    else if (!string.IsNullOrEmpty(ErrorMessage))
                    {
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle me-2"></i>
                            @ErrorMessage
                        </div>
                    }
                    else if (Model != null)
                    {
                        <div class="row g-4">
                            <!-- Basic Information -->
                            <div class="col-12">
                                <div class="detail-section">
                                    <h5>
                                        <i class="bi bi-clipboard-data me-2"></i>Basic Information
                                    </h5>

                                    <div class="row g-3">
                                        <div class="col-md-6">
                                            <label class="form-label text-muted small">ID</label>
                                            <p class="fw-bold">
                                                <span class="badge badge-modern badge-gradient-primary">#@Model.CheckOutQuanNhid</span>
                                            </p>
                                        </div>

                                        <div class="col-md-6">
                                            <label class="form-label text-muted small">Check Out Time</label>
                                            <p class="fw-bold">
                                                @if(Model.CheckOutTime.HasValue)
                                                {
                                                    <span>@Model.CheckOutTime.Value.ToString("dd/MM/yyyy HH:mm:ss")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </p>
                                        </div>

                                        <div class="col-md-6">
                                            <label class="form-label text-muted small">Return Date</label>
                                            <p class="fw-bold">
                                                @if(Model.ReturnDate.HasValue)
                                                {
                                                    <span>@Model.ReturnDate.Value.ToString("dd/MM/yyyy")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </p>
                                        </div>

                                        <div class="col-md-6">
                                            <label class="form-label text-muted small">Payment Method</label>
                                            <p class="fw-bold">
                                                @if(!string.IsNullOrEmpty(Model.PaymentMethod))
                                                {
                                                    <span class="badge badge-modern" style="background: #6c757d;">@Model.PaymentMethod</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Financial Information -->
                            <div class="col-12">
                                <div class="detail-section">
                                    <h5>
                                        <i class="bi bi-cash-stack me-2"></i>Financial Information
                                    </h5>
                                    <div class="row g-3">

                                        <div class="col-md-4">
                                            <label class="form-label text-muted small">Extra Cost</label>
                                            <p class="fw-bold text-warning">
                                                @(Model.ExtraCost?.ToString("C") ?? "$0.00")
                                            </p>
                                        </div>

                                        <div class="col-md-4">
                                            <label class="form-label text-muted small">Late Fee</label>
                                            <p class="fw-bold text-danger">
                                                @(Model.LateFee?.ToString("C") ?? "$0.00")
                                            </p>
                                        </div>

                                        <div class="col-md-4">
                                            <label class="form-label text-muted small">Total Cost</label>
                                            <p class="fw-bold text-success fs-4">
                                                @(Model.TotalCost?.ToString("C") ?? "$0.00")
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Status Information -->
                            <div class="col-12">
                                <div class="detail-section">
                                    <h5>
                                        <i class="bi bi-info-square me-2"></i>Status Information
                                    </h5>
                                    <div class="row g-3">

                                        <div class="col-md-6">
                                            <label class="form-label text-muted small">Payment Status</label>
                                            <p>
                                                @if(Model.IsPaid)
                                                {
                                                    <span class="badge badge-modern badge-gradient-success pulse-animation fs-6">
                                                        <i class="bi bi-check-circle me-1"></i>Paid
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-modern badge-gradient-warning pulse-animation fs-6">
                                                        <i class="bi bi-clock me-1"></i>Unpaid
                                                    </span>
                                                }
                                            </p>
                                        </div>

                                        <div class="col-md-6">
                                            <label class="form-label text-muted small">Damage Status</label>
                                            <p>
                                                @if(Model.IsDamageReported)
                                                {
                                                    <span class="badge badge-modern badge-gradient-danger fs-6">
                                                        <i class="bi bi-exclamation-triangle me-1"></i>Damage Reported
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-modern badge-gradient-success fs-6">
                                                        <i class="bi bi-check-circle me-1"></i>No Damage
                                                    </span>
                                                }
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Return Condition -->
                            @if(Model.ReturnCondition != null)
                            {
                                <div class="col-12">
                                    <div class="detail-section">
                                        <h5>
                                            <i class="bi bi-tools me-2"></i>Return Condition
                                        </h5>
                                        <div class="row g-3">

                                            <div class="col-md-6">
                                                <label class="form-label text-muted small">Condition Name</label>
                                                <p class="fw-bold">@Model.ReturnCondition.Name</p>
                                            </div>

                                            <div class="col-md-3">
                                                <label class="form-label text-muted small">Severity Level</label>
                                                <p class="fw-bold">
                                                    @if(Model.ReturnCondition.SeverityLevel.HasValue)
                                                    {
                                                        <span class="badge badge-modern badge-gradient-warning">Level @Model.ReturnCondition.SeverityLevel</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">N/A</span>
                                                    }
                                                </p>
                                            </div>

                                            <div class="col-md-3">
                                                <label class="form-label text-muted small">Repair Cost</label>
                                                <p class="fw-bold text-danger">
                                                    @(Model.ReturnCondition.RepairCost?.ToString("C") ?? "$0.00")
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            <!-- Signatures -->
                            <div class="col-12">
                                <div class="detail-section">
                                    <h5>
                                        <i class="bi bi-pen me-2"></i>Signatures
                                    </h5>
                                    <div class="row g-3">

                                        <div class="col-md-6">
                                            <label class="form-label text-muted small">Staff Signature</label>
                                            <p class="fw-bold">@(string.IsNullOrEmpty(Model.StaffSignature) ? "N/A" : Model.StaffSignature)</p>
                                        </div>

                                        <div class="col-md-6">
                                            <label class="form-label text-muted small">Customer Signature</label>
                                            <p class="fw-bold">@(string.IsNullOrEmpty(Model.CustomerSignature) ? "N/A" : Model.CustomerSignature)</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Notes & Feedback -->
                            <div class="col-12">
                                <div class="detail-section">
                                    <h5>
                                        <i class="bi bi-journal-text me-2"></i>Notes & Feedback
                                    </h5>
                                    <div class="row g-3">

                                        <div class="col-md-6">
                                            <label class="form-label text-muted small">Notes</label>
                                            <div class="glass-effect p-3">
                                                @(string.IsNullOrEmpty(Model.Notes) ? "No notes" : Model.Notes)
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <label class="form-label text-muted small">Customer Feedback</label>
                                            <div class="glass-effect p-3">
                                                @(string.IsNullOrEmpty(Model.CustomerFeedback) ? "No feedback" : Model.CustomerFeedback)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private CheckOutQuanNh? Model { get; set; }
    private bool IsLoading { get; set; } = true;
    private string? ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadDetail();
    }

    private async Task LoadDetail()
    {
        IsLoading = true;
        ErrorMessage = null;

        try
        {
            Model = await _graphQLConsumers.GetCheckOutQuanNh(Id);
            if (Model == null)
            {
                ErrorMessage = "Check out record not found.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error loading details: {ex.Message}";
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/CheckOutQuanNhs/CheckOutQuanNhList");
    }

    private void GoToEdit()
    {
        Navigation.NavigateTo($"/CheckOutQuanNhs/Edit/{Id}");
    }

    private void GoToDelete()
    {
        Navigation.NavigateTo($"/CheckOutQuanNhs/Delete/{Id}");
    }
}
